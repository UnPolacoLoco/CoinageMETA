/*
 * CoinageMETA, a Gamebuino game
 *
 * Copyright 2018, Rafal Boguszewski
 */

#include <Gamebuino-Meta.h>

const uint16_t bgData[] = {80,64,1, 1, 0, 0, 0x1cdb,0x24ba,0x2c9a,0x2cba,0x24ba,0x24ba,0x2c9a,0x249a,0x249a,0x249a,0x2c99,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c79,0x249a,0x249a,0x2c79,0x249a,0x2c9a,0x249a,0x24ba,0x249a,0x24ba,0x249a,0x249a,0x24ba,0x24ba,0x1cbb,0x24ba,0x249a,0x24ba,0x24ba,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x14db,0x14dc,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x24bb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x24bb,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cba,0x249a,0x2cba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x24ba,0x24ba,0x249a,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c9a,0x2c9a,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c99,0x2c79,0x2c9a,0x249a,0x2c79,0x2c79,0x249a,0x249a,0x24ba,0x2c79,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x24ba,0x249a,0x249a,0x24bb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x24ba,0x24ba,0x24ba,0x249a,0x1cbb,0x1cdb,0x24ba,0x24ba,0x24ba,0x24ba,0x24ba,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c99,0x249a,0x2c99,0x2c79,0x2c79,0x2c79,0x2c7a,0x249a,0x2c79,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c99,0x2c99,0x2c99,0x2c79,0x2c99,0x2c79,0x2c99,0x2c9a,0x2c99,0x249a,0x249a,0x249a,0x24bb,0x24ba,0x249a,0x249a,0x24ba,0x249a,0x24ba,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cba,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x1cbb,0x1cbb,0x1cba,0x1cbb,0x249a,0x24ba,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x2c99,0x2c79,0x2c99,0x2c99,0x2c79,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c99,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c9a,0x2c99,0x249a,0x2c99,0x2c9a,0x249a,0x2c99,0x2c9a,0x249a,0x249a,0x24ba,0x24ba,0x249a,0x249a,0x24ba,0x249a,0x24ba,0x24ba,0x24ba,0x24ba,0x1cba,0x1cbb,0x24ba,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x249a,0x24ba,0x1cbb,0x249a,0x24ba,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3479,0x2c79,0x3479,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c99,0x2c79,0x2c79,0x2c9a,0x2c9a,0x2c79,0x2c99,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x24ba,0x24ba,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x24ba,0x24ba,0x1cbb,0x1cdb,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c99,0x2c9a,0x2c9a,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x2c79,0x2c79,0x3459,0x2c79,0x2c59,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c99,0x249a,0x249a,0x249a,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cba,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x24ba,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x24ba,0x24ba,0x24ba,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x2c99,0x2c99,0x2c79,0x2c9a,0x3479,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3458,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3458,0x3458,0x3479,0x3479,0x3458,0x3459,0x2c79,0x2c79,0x2c9a,0x2c79,0x2c7a,0x2c79,0x249a,0x249a,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x1cbb,0x1cbb,0x249a,0x1cbb,0x1cbb,0x24ba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x1cbb,0x1cbb,0x24ba,0x1cdb,0x1cdb,0x24bb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x1cba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c9a,0x2c9a,0x2c9a,0x2c99,0x2c79,0x3479,0x2c79,0x3479,0x2c79,0x3459,0x3458,0x3459,0x3459,0x2c79,0x3479,0x3479,0x3458,0x3458,0x3458,0x2c79,0x3458,0x2c79,0x3459,0x3459,0x3458,0x3458,0x2c79,0x2c79,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c9a,0x249a,0x249a,0x24ba,0x249a,0x24ba,0x24bb,0x24ba,0x24ba,0x24ba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x24ba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x249a,0x249a,0x1cbb,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x2c7a,0x249a,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3479,0x2c79,0x2c79,0x3458,0x2c59,0x3458,0x3458,0x3458,0x3458,0x2c79,0x3459,0x3459,0x3458,0x3479,0x2c79,0x2c79,0x2c79,0x2c79,0x2c99,0x2c99,0x2c9a,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x24ba,0x24ba,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x24ba,0x1cbb,0x24ba,0x1cbb,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x2c9a,0x249a,0x2c9a,0x2c99,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x3458,0x2c79,0x3458,0x2c79,0x2c79,0x2c79,0x3458,0x3438,0x3458,0x3458,0x3459,0x3458,0x3458,0x3459,0x3458,0x3459,0x2c79,0x3458,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x1cba,0x24ba,0x1cbb,0x1cdb,0x24ba,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x24ba,0x1cdb,0x1cbb,0x24ba,0x24ba,0x24ba,0x1cbb,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x249a,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x3459,0x3479,0x3458,0x2c79,0x3458,0x3458,0x2c79,0x3458,0x3458,0x3c38,0x3458,0x3458,0x3458,0x3479,0x3479,0x3459,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c9a,0x2c99,0x2c9a,0x2c99,0x249a,0x2c9a,0x249a,0x249a,0x24ba,0x249a,0x1cbb,0x24ba,0x1cbb,0x1cdb,0x1cbb,0x24ba,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x24ba,0x24ba,0x24ba,0x24ba,0x24ba,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x349a,0x2c7a,0x2c7a,0x2c79,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x2c79,0x2c79,0x2c79,0x3458,0x3458,0x3458,0x3c38,0x3458,0x3458,0x3458,0x3458,0x2c79,0x3479,0x3458,0x2c79,0x2c7a,0x2c79,0x2c79,0x2c79,0x2c99,0x2c99,0x249a,0x2c9a,0x24ba,0x249a,0x249a,0x249a,0x1cbb,0x249a,0x1cbb,0x1cbb,0x24ba,0x24ba,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x1cbb,0x24ba,0x24ba,0x24ba,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x3c99,0x249a,0x2c79,0x249a,0x2c79,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x3459,0x3458,0x3459,0x3c38,0x3458,0x3479,0x3458,0x3459,0x3459,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x249a,0x2c9a,0x249a,0x2c99,0x2c99,0x249a,0x24ba,0x24ba,0x24ba,0x24ba,0x24ba,0x1cbb,0x1cdb,0x1cbb,0x24ba,0x24ba,0x24ba,0x249a,0x1cba,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x249a,0x24ba,0x24ba,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x249a,0x24ba,0x24ba,0x249a,0x249a,0x2cba,0x249a,0x249a,0x249a,0x249a,0x1cba,0x249a,0x2c79,0x249a,0x249a,0x2c79,0x2c99,0x2c99,0x2c9a,0x2c79,0x2c79,0x3459,0x2c79,0x3459,0x3438,0x3459,0x3459,0x2c79,0x3459,0x3459,0x3458,0x3458,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c9a,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x1cbb,0x24ba,0x24ba,0x249a,0x24ba,0x1cbb,0x1cbb,0x24ba,0x1cba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x249a,0x249a,0x24ba,0x24ba,0x249a,0x24bb,0x1cdb,0x14db,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x24ba,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x24ba,0x24ba,0x34da,0x2cda,0x249a,0x24ba,0x24ba,0x1cbb,0x249a,0x3458,0x3458,0x249a,0x249a,0x249a,0x249a,0x2c9a,0x2c79,0x249a,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x2c79,0x2c79,0x2c79,0x2c79,0x3459,0x2c79,0x3459,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c9a,0x2c9a,0x2c99,0x249a,0x249a,0x24ba,0x24ba,0x24ba,0x24ba,0x1cbb,0x24ba,0x1cdb,0x1cba,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x24ba,0x24bb,0x1cbb,0x1cbb,0x1cbb,0x24bb,0x24ba,0x24ba,0x1cbb,0x24bb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x24ba,0x1cba,0x1cbb,0x1cbb,0x24bb,0x1cbb,0x24ba,0x34da,0x34da,0x249a,0x24ba,0x24ba,0x24ba,0x249a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c9a,0x249a,0x2c99,0x2c79,0x249a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c99,0x2c79,0x2c79,0x2c79,0x3479,0x2c9a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x249a,0x2c7a,0x249a,0x249a,0x24ba,0x1cba,0x24ba,0x249a,0x249a,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x249a,0x1cba,0x24ba,0x1cbb,0x24ba,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14db,0x1cdb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24bb,0x1cbb,0x249a,0x1cbb,0x1cdb,0x1cbb,0x249a,0x2c9a,0x2c99,0x2c79,0x2c9a,0x3459,0x2c99,0x249a,0x249a,0x249a,0x249a,0x2c79,0x2c79,0x2c99,0x249a,0x2c79,0x2c79,0x2c99,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x249a,0x2c79,0x2c79,0x2c79,0x2c79,0x2c79,0x2c99,0x249a,0x249a,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x14dc,0x14db,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cba,0x1cbb,0x24ba,0x24bb,0x24ba,0x1cbb,0x1cdb,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x24ba,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x249a,0x24ba,0x1cdb,0x2c79,0x2c79,0x2c79,0x249a,0x249a,0x249a,0x24ba,0x249a,0x2c99,0x249a,0x249a,0x2c9a,0x2c9a,0x2c99,0x2c9a,0x2c99,0x2c99,0x2c79,0x2c99,0x2c79,0x2c79,0x2c79,0x2c79,0x249a,0x2c99,0x24ba,0x24bb,0x24ba,0x249a,0x249a,0x24ba,0x1cba,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdc,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x14db,0x14dc,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cbb,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x14fc,0x14db,0x1cdb,0x14db,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24bb,0x1cbb,0x1cbb,0x1cbb,0x24bb,0x249a,0x24ba,0x249a,0x249a,0x24bb,0x24ba,0x24ba,0x24ba,0x24ba,0x249a,0x249a,0x2c9a,0x249a,0x249a,0x2c9a,0x249a,0x249a,0x2c99,0x2c79,0x2c79,0x2c79,0x2c99,0x249a,0x2c99,0x249a,0x249a,0x24ba,0x249a,0x24ba,0x24ba,0x24ba,0x1cbb,0x1cdb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x14dc,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x14db,0x14db,0x1cbb,0x1cdb,0x14dc,0x14fc,0x1cdb,0x14db,0x14db,0x1cbb,0x1cbb,0x14dc,0x1cdb,0x24bb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x14dc,0x14dc,0x1cdb,0x1cbb,0x14db,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24bb,0x1cbb,0x249a,0x1cbb,0x249a,0x24ba,0x24ba,0x249a,0x24ba,0x249a,0x24ba,0x249a,0x249a,0x249a,0x24ba,0x249a,0x249a,0x249a,0x24ba,0x24ba,0x249a,0x249a,0x1cbb,0x249a,0x249a,0x24ba,0x24ba,0x1cbb,0x24ba,0x1cbb,0x1cba,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x14dc,0x14dc,0x1cdb,0x1cbb,0x1cdb,0x14db,0x1cdb,0x14dc,0x14db,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24bb,0x1cdb,0x1cdb,0x1cbb,0x14db,0x1cdb,0x1cdb,0x14dc,0x1cbb,0x1cdb,0x249a,0x24ba,0x249a,0x24bb,0x24ba,0x249a,0x249a,0x249a,0x24bb,0x1cbb,0x1cbb,0x24ba,0x1cbb,0x249a,0x2c9a,0x24ba,0x249a,0x24ba,0x249a,0x24ba,0x249a,0x24ba,0x24ba,0x249a,0x24ba,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdc,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x14db,0x1cdb,0x14dc,0x1cdb,0x14fc,0x14fc,0x14db,0x1cdb,0x1cdb,0x14dc,0x14db,0x14dc,0x1cdb,0x14dc,0x1cdc,0x14fc,0x14db,0x14dc,0x14fc,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x14fc,0x14dc,0x1cbb,0x24ba,0x1cdb,0x14dc,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x14dc,0x14dc,0x1cdb,0x1cbb,0x1cdb,0x24bb,0x1cbb,0x24ba,0x24ba,0x24bb,0x1cbb,0x1cdb,0x1cbb,0x24ba,0x1cdb,0x1cdb,0x24ba,0x24ba,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x249a,0x1cbb,0x1cbb,0x24ba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x14db,0x1cbb,0x14dc,0x1cdb,0x14fc,0x24ba,0x14fc,0x1cdb,0x14dc,0x14db,0x14dc,0x14dc,0x14dc,0x1cdb,0x14dc,0x14dc,0x14dc,0x14dc,0x14dc,0x14db,0x14db,0x14dc,0x14fc,0x1cdb,0x14db,0x14fc,0x14fc,0x14dc,0x14fc,0x14dc,0x14fc,0x14fc,0x14fc,0x14db,0x14fc,0x1cdb,0x14db,0x1cbb,0x1cbb,0x1cbb,0x14db,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x14dc,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cba,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x24ba,0x1cbb,0x1cbb,0x1cba,0x1cbb,0x24ba,0x249a,0x1cdb,0x1cdb,0x24ba,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x14dc,0x14db,0x1cdb,0x14db,0x1cdb,0x1cdb,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0x1cdb,0x14fc,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14fc,0x14db,0x14fc,0x14fc,0x14db,0x14fc,0x14fc,0x14fc,0xd1d,0x14fc,0x14fc,0x14dc,0x14fc,0x14fc,0x14db,0x14dc,0x14fc,0x14dc,0x14fc,0x14db,0x14dc,0x1cbb,0x24bb,0x14dc,0x1cdb,0x1cbb,0x1cbb,0x1cba,0x1cdb,0x1cdb,0x14fc,0x14dc,0x14dc,0x1cdb,0x1cdb,0x14db,0x14dc,0x14dc,0x1cdb,0x1cdb,0x14db,0x1cbb,0x1cdb,0x1cdb,0x24ba,0x1cdb,0x1cbb,0x249a,0x24ba,0x24bb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x14db,0x1cdb,0x1cdb,0x14db,0x1cdb,0x14dc,0x14fc,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14dc,0x14fc,0x14dc,0x14fc,0x1cdb,0x14fc,0x14dc,0x14fc,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14fc,0x14db,0x14dc,0x14dc,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x14fc,0x14fc,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x1cdc,0x1cbb,0x14dc,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x24ba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x14db,0x1cdb,0x14dc,0x1cbb,0x14fc,0x1cdb,0x1cdb,0x14dc,0x14dc,0x14db,0x14fc,0x14fc,0x14db,0x14fc,0x1cdb,0x14dc,0x14fc,0x14fc,0x14dc,0x14dc,0x14dc,0x14fc,0x14fc,0x14fc,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0xcfc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14db,0x1cdb,0x14db,0x1cdb,0x1cdb,0x14db,0x1cbb,0x24ba,0x1cbb,0x1cba,0x1cbb,0x24bb,0x1cdb,0x1cdb,0x14fc,0xcfc,0x14fc,0x14dc,0x14fc,0x1cdb,0x1cdb,0x14fc,0x14dc,0x1cdb,0x14fc,0x1cdb,0x14dc,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14db,0x1cbb,0x1cdb,0x14dc,0x14db,0x1cdb,0x14fc,0x14fc,0x14fc,0x1cdb,0x14dc,0x14fc,0x14fc,0x14dc,0x14fc,0x14fc,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14dc,0x1cdb,0x14fc,0x14fc,0x14fc,0x14dc,0x14fc,0xd1d,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14db,0x14db,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14dc,0x1cdb,0x14dc,0x14dc,0x14fc,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x14fc,0x14db,0x1cdb,0x14fc,0x14fc,0x14fc,0x14dc,0x14dc,0x1cdb,0x14fc,0x1cdb,0x14fc,0xcfc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0xcfc,0x14fc,0x1cdb,0xcfc,0x14fc,0x1cdb,0x14db,0x14fc,0x14fc,0x14fc,0x14fc,0xd1c,0x14fc,0x1cdb,0x14dc,0xcfc,0x14fc,0x14fc,0x14dc,0x14db,0x1cdb,0x1cdb,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x14dc,0x14dc,0xd1d,0xd1c,0xd1c,0x14fc,0x14fc,0x14fc,0x14dc,0x14dc,0x1cdb,0x14dc,0x1cdb,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cbb,0x14dc,0x14fc,0x14fc,0x1cdb,0x1cdb,0x14dc,0x14db,0x1cdb,0x14db,0x14db,0x14db,0x14db,0x14db,0x1cbb,0x14fc,0x14dc,0x14dc,0x14fc,0x1cdb,0x14fc,0x14dc,0xd1c,0x14fc,0x14fc,0x14fc,0x14db,0x14db,0xcfc,0x14fc,0x14fc,0x1cdb,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14fc,0x14fc,0x14fc,0x14db,0x14fc,0x1cdb,0x14db,0x1cdb,0x1cbb,0x24ba,0x1cbb,0x1cbb,0x1cba,0x1cdb,0x24ba,0x1cdb,0x1cdb,0x2d70,0x2628,0x14fc,0xd1d,0x14fc,0xcfc,0x14fc,0x14fc,0x14fc,0x14dc,0x14dc,0x14fc,0x14fc,0x14fc,0x14db,0x1cbb,0x1cbb,0x1cdb,0x14db,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x14fc,0x24ba,0x1cdb,0x1cdb,0x14dc,0x1cbb,0x14dc,0x1cdb,0x1cbb,0x14fc,0x14dc,0x14dc,0x1cdb,0x14dc,0x14dc,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0xcfc,0xcfc,0x14fc,0x14fc,0x14dc,0x14dc,0x14fc,0xcfc,0x14dc,0xcfc,0x14dc,0x14dc,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14db,0x14db,0x1cdb,0x14fc,0x14fc,0x14dc,0x14fc,0x14dc,0x14db,0x14fc,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1da7,0x46ab,0x2e29,0x5f2e,0x2628,0x576e,0xd1d,0xd1d,0xd1d,0x14fc,0x14fc,0x14fc,0x1cdb,0x14fc,0x14fc,0x14db,0x14dc,0x1cdb,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14fc,0x14dc,0x14dc,0x1cdb,0x14db,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cbb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x14db,0x14dc,0x14dc,0x1cdb,0x1cdb,0x14fb,0x14fc,0x14db,0x14fc,0x14dc,0x14fc,0xd1c,0x1cdb,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0x14db,0x14db,0x1cdb,0x1cdb,0x14dc,0x14dc,0x1cdb,0x1cdb,0x14db,0x14dc,0x14fc,0x14db,0x14fc,0x1cdb,0x14fc,0x14fc,0x14db,0x1cdb,0x14db,0x1cbb,0x2534,0x2dc8,0x5f0e,0x4eec,0x572d,0x470c,0x6f50,0x2608,0x36cb,0x2e49,0xd1d,0xd1d,0xd1d,0xd1d,0xd1d,0x14fc,0x14fc,0xcfc,0x14dc,0x14fc,0x1cdb,0x14fc,0x14db,0x14db,0x14db,0x1cdb,0x14fc,0x1cdb,0x14dc,0x14db,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x14dc,0x14db,0x1cdb,0x14db,0x14dc,0x14fc,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x14db,0x14dc,0x14db,0x14fc,0x14fc,0x14fc,0x14fc,0x14dc,0xcfc,0x14fc,0xcfc,0x14fc,0x14fc,0x14fc,0x14fc,0x14db,0x14fc,0x14dc,0x14dc,0x14fc,0x14db,0x14db,0x14fc,0x1cdb,0x14fc,0x1cdb,0x14dc,0x14dc,0x14dc,0x14fc,0xcfc,0x14dc,0x14dc,0x1cdb,0x1dc7,0x5f4f,0x4f2d,0x25a7,0x3e6a,0x366a,0x25c7,0x2e29,0x2e49,0x3ecb,0x474d,0x15e7,0xd1d,0xcfd,0xcfc,0xd1d,0xcfc,0x14fc,0x14fc,0xcfc,0x14fc,0x14dc,0x14fc,0x14fc,0x14dc,0x1cdb,0x1cdb,0x14dc,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x14db,0x1cdb,0x14db,0x14db,0x1cdb,0x14dc,0x1cdb,0x1cdc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x14dc,0x14dc,0x14fc,0x14fc,0x1cdb,0x14fc,0x14dc,0x14dc,0x14fc,0x14fc,0x1cdb,0x14fc,0x14fc,0x14dc,0x14fc,0x14fc,0x14db,0x14dc,0x14dc,0x1cdb,0x1cdb,0x14fc,0x14db,0x14fc,0x14db,0x14fc,0x14dc,0x1cbb,0x1cdb,0x1cdb,0x5f2f,0x1565,0x25c7,0x3e6a,0x1da7,0x25c7,0x25a7,0x1ce4,0x25c8,0x1da7,0x2e8a,0x15c7,0x474d,0x1628,0xd1d,0xd1c,0xd1d,0xd1d,0xd1d,0xd1c,0x14fc,0x14fc,0x14fc,0x14dc,0x14fc,0x14db,0x14db,0x14fc,0x14db,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x14db,0x1cdb,0x14fc,0x14dc,0x14db,0x1cdc,0x14fc,0x14fc,0x14dc,0x14fc,0xcfc,0x1cdb,0x14dc,0x14dc,0x14fc,0x1cdb,0x14db,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x14db,0x1cdb,0x14db,0x1cdb,0x1cbb,0x14dc,0x1cdb,0x14dc,0x1cf9,0x1d45,0x2608,0x2e08,0x1e08,0x2629,0x2608,0x4f2d,0x1d04,0x14e3,0x1c82,0x1504,0x14a2,0x15a6,0x36cb,0x1e28,0x51d,0xd1d,0xd1d,0xd1d,0xd1c,0x14fc,0xd1c,0xd1c,0x1cdb,0x14fc,0x14db,0x14dc,0x14fc,0x14dc,0x14fc,0x1cdb,0x14dc,0x14db,0x1cdb,0x1cdb,0x24ba,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x24bb,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x1cdb,0x14db,0x1cdb,0x1cdb,0x14fc,0x14fc,0x14dc,0x14dc,0x14fc,0x14dc,0x14db,0x14dc,0x14fc,0x14fc,0x1cdb,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x5f4e,0x1d86,0x2e08,0x2608,0x3eaa,0x1ca3,0x14e3,0x572d,0x15a6,0x1504,0x1545,0x1dc7,0x1545,0x1545,0x1e28,0x1e28,0x1e48,0x53d,0xd1d,0xd1d,0xcfc,0xd1d,0xd1c,0xcfc,0xd1c,0x14dc,0x14fc,0x14fc,0x14fc,0x14db,0x1cdb,0x1cdb,0x14fc,0x1cdb,0x1cbb,0x1cdb,0x1cba,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cba,0x1cbb,0x1cbb,0x249a,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x14dc,0x1cdb,0x1cbb,0x1cdb,0x14db,0x1cdb,0x14fc,0x14fc,0x1cdb,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x14db,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x574e,0x3629,0x2e28,0x4f6d,0x1586,0x1525,0x14c3,0x1d04,0x1504,0x1dc7,0x1de7,0x2628,0x1dc7,0x15c6,0x4f8e,0x1e48,0x1e28,0x1e28,0xd1d,0xd1d,0xd1d,0xd1d,0xd1d,0xd1d,0xd1d,0xcfc,0xcfc,0x14fc,0x14fc,0x14dc,0x1cdb,0x24ba,0x14db,0x14db,0x1cdb,0x1cba,0x1cdb,0x1cbb,0x1cdb,0x24ba,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x249a,0x24ba,0x1cba,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x14dc,0x14fc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x24ba,0x1cba,0x1cbb,0x1cbb,0x1cdb,0x249a,0x24ba,0x1cdb,0x1cdb,0x1cdb,0x5f4e,0x2e69,0x2608,0x1da7,0x1de7,0x1524,0x1525,0x1dc7,0x1de7,0x2608,0x1d86,0x1586,0x1e28,0x4f6d,0x1586,0x1e28,0x1e48,0x1e48,0x1668,0xd1d,0xd1d,0xd1d,0xd1d,0xd1c,0xcfc,0xcfc,0x14fc,0x14fc,0xcfc,0x14dc,0x14fc,0x1cdb,0x14dc,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x14db,0x1cbb,0x1cdb,0x24ba,0x1cbb,0x1cba,0x24ba,0x1cba,0x24ba,0x2c9a,0x249a,0x1cbb,0x249a,0x24ba,0x249a,0x1cdb,0x1cbb,0x1cdb,0x1cba,0x24ba,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cdb,0x24ba,0x14db,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x24ba,0x1cdb,0x1cba,0x1cba,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x1d25,0x3ecb,0x1cc3,0x1586,0x1d04,0x1dc7,0x1e08,0x1e28,0x15a6,0x1de7,0x1e07,0x2e8a,0x15a6,0x1461,0x2628,0x2608,0x1e28,0x1648,0x1648,0x1668,0x53d,0xd1d,0xd1d,0xd1d,0xd1d,0xd1d,0xd1d,0x14fc,0x14fc,0x14fc,0x14dc,0x14db,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x24ba,0x1cbb,0x1cdb,0x249a,0x249a,0x249a,0x249a,0x24ba,0x24ba,0x1cbb,0x24ba,0x24ba,0x24ba,0x249a,0x24ba,0x249a,0x24ba,0x24ba,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x1cbb,0x1cbb,0x1cbb,0x24ba,0x24ba,0x1cbb,0x24ba,0x249a,0x1cbb,0x24ba,0x1cbb,0x25e8,0x3e6a,0x1d45,0x3669,0x1504,0x25c7,0x1586,0x1d86,0x2e08,0x368a,0x2e49,0x36ab,0x1de8,0x4f6d,0x36aa,0x2669,0x1e28,0x1e28,0x1648,0x1e48,0x1668,0x53d,0xd3d,0xd1d,0xd3d,0xd1d,0xd1d,0xcfc,0x14fc,0x14fc,0x14dc,0x1cdb,0x14dc,0x1cdb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x24ba,0x1cdb,0x2c9a,0x24ba,0x24ba,0x249a,0x2c99,0x249a,0x249a,0x24ba,0x249a,0x24ba,0x249a,0x1cbb,0x249a,0x249a,0x249a,0x24ba,0x249a,0x1cba,0x24ba,0x24ba,0x1cbb,0x1cdb,0x1cdb,0x1cba,0x1cdb,0x24ba,0x1cbb,0x1cbb,0x1cdb,0x1cdb,0x1cbb,0x24ba,0x24ba,0x24ba,0x1cbb,0x1cbb,0x249a,0x24ba,0x3e09,0x2587,0x3e49,0x1c62,0x1ce4,0x1cc3,0x1de7,0x1545,0x3629,0x2e29,0x2628,0x1d25,0xff80,0x6f51,0xe8e4,0x0,0xe8e4,0x15a6,0x1504,0x1e28,0x1e48,0x1668,0x1668,0xd1d,0x53d,0xd3d,0xd1d,0xd1c,0xd1d,0xcfc,0x14fc,0x14dc,0x14fc,0x14dc,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cdb,0x1cbb,0x24ba,0x249a,0x249a,0x2c9a,0x249a,0x249a,0x2c9a,0x249a,0x2c99,0x2c99,0x24ba,0x2c79,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x1cbb,0x24ba,0x24ba,0x249a,0x249a,0x1cbb,0x1cdb,0x249a,0x1cbb,0x1cbb,0x1cbb,0x1cdb,0x24ba,0x1cbb,0x24ba,0x24ba,0x249a,0x24ba,0x24ba,0x24ba,0x24ba,0x5eed,0x2dc8,0x2546,0x2546,0x2546,0x1d05,0x2d87,0x1d04,0x4eec,0x1586,0x2628,0x4f0c,0xff80,0xffff,0xff80,0x574d,0xe8e4,0x1565,0xd65,0xde7,0x1648,0x1e48,0x1648,0x1668,0x53d,0x53d,0xd1d,0xd1d,0xd1d,0x14fc,0xd1d,0x14fc,0x14dc,0x14fc,0x14db,0x1cbb,0x1cdb,0x1cbb,0x1cba,0x1cbb,0x24ba,0x24ba,0x24ba,0x249a,0x24ba,0x249a,0x249a,0x2c79,0x2c9a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x249a,0x3478,0x4457,0x4477,0x4c56,0x5455,0x6413,0x6c33,0x7411,0x7bf0,0x83d0,0x8bef,0x93cf,0x93ce,0x9bcd,0xa3ac,0x2c9a,0x1cba,0x24ba,0x249a,0x249a,0x249a,0x249a,0x570d,0x24e5,0x466a,0x2dc8,0x2546,0x1ce4,0x1d66,0x25c7,0x1d05,0x468b,0x1d05,0x2dc8,0x3eab,0x36aa,0x1d66,0xff80,0x1420,0x1504,0x1586,0x15c7,0x2628,0x15a6,0xda6,0x1e48,0x1e28,0x1e48,0x53d,0x51d,0xd1c,0x5475,0xd1d,0xd1c,0x14fc,0x14fc,0x14dc,0x14dc,0x1cdb,0x1cdb,0x249a,0x1cba,0x249a,0x249a,0x249a,0x249a,0x249a,0x24ba,0x249a,0x3c78,0x5455,0x73f2,0x83d0,0x9bad,0x8bcf,0x9bae,0xa38c,0xb36b,0xbb6a,0xbb4a,0xb38b,0xab8c,0x9bad,0x93ce,0x8bcf,0x83f0,0xa3ad,0xa3ad,0x6c13,0x83cf,0x5455,0x4c56,0x4476,0x3c77,0x3c78,0x1cdb,0x24ba,0x249a,0x24ba,0x2d8c,0x5f0e,0x5f0e,0x2da7,0x2dc8,0x2526,0x7f12,0x1cc4,0x2d87,0x25e8,0x25a7,0x3eaa,0x46ab,0x1d25,0x1da7,0x3e6a,0x1d86,0x368a,0x1ce4,0x1545,0x1dc7,0x2e69,0x2628,0x1de7,0x2e8a,0x1e28,0x1e48,0x1e48,0x1e48,0x53d,0xd1d,0x64ee,0xabcc,0xd3a,0xcfc,0x14dc,0x14dc,0x7411,0x83ef,0x1cdb,0x1cdb,0x24ba,0x3498,0xa38d,0x83d0,0x9b8d,0xab8b,0xb36a,0xbb49,0xc349,0xc349,0xbb49,0xbb8a,0xbbaa,0xb3aa,0x94eb,0x73e6,0xbd31,0x7bf0,0x9c8b,0x8bce,0x8bcf,0x93af,0xab8c,0x8bcf,0x93ae,0xa3ad,0xb36a,0x8c29,0x4d69,0xbb8a,0x2ce5,0x3629,0x25e7,0x3629,0x3e09,0x3629,0x3e4a,0x3609,0x3e29,0x2d87,0x2505,0x2da8,0x2d87,0x2546,0x2505,0x1ce4,0x25a7,0x1d25,0x2dc8,0x468b,0x2e08,0x1d66,0x3e49,0x2e69,0x36aa,0x46ec,0x1ca3,0x25a7,0x1566,0x368a,0x1d87,0x1de7,0x1e28,0x1545,0x8f55,0xda6,0xdc6,0x2eea,0x4d48,0x6c67,0xb3ca,0xac0a,0x8c8a,0x9c8b,0x946a,0x9c4a,0xb3aa,0xbb8a,0xb3ca,0xbb8a,0xc349,0xbb8a,0xc349,0xbb89,0xbb69,0xc349,0xb389,0xa409,0x560a,0xbb69,0x94cb,0x948a,0xa48b,0x9429,0x9429,0x9c8a,0xabc9,0xac0a,0x7d6b,0x6509,0x5ce8,0x6d29,0xaba9,0x7c69,0x65aa,0x4423,0x2dc8,0x3d88,0x5dea,0xbbaa,0x74a9,0x4548,0x4568,0x2dc8,0x1d25,0x2586,0x3e29,0x2566,0x2de8,0x2dc8,0x3609,0x468b,0x2d46,0x24a3,0x24e5,0x2da7,0x1d25,0x1d25,0x1d25,0x2e08,0x1d25,0x3eab,0x2e08,0x4f2d,0x1ca2,0x1586,0x2628,0x1da7,0x1dc7,0x1545,0x1dc7,0x25e8,0x366a,0x2e49,0x2e8a,0x3f2c,0x2669,0xaf9a,0x94eb,0xabea,0xbbca,0xb3ca,0xabca,0xb3ca,0xbbaa,0xbbaa,0xbb89,0xbb8a,0xa42a,0x7c07,0x5c66,0x4465,0xac0a,0x7cc9,0x5e0b,0x2d46,0x45e9,0x5ecc,0x5ecd,0xbb69,0x64a8,0x2483,0x56cc,0x3e29,0x4eab,0x2401,0x948a,0xbb69,0x6509,0x664c,0x6509,0x73e6,0x9c2a,0xbb69,0xa3a9,0xb3ca,0xbb8a,0xb3a9,0xa3e9,0xb3aa,0xb3ca,0xa409,0xa40a,0x3649,0x1d25,0x25a7,0x2e08,0x35e8,0x2567,0x1d66,0x1d66,0x35a8,0x2483,0x2dc8,0x2da7,0x1d45,0x2de8,0x35e8,0x3609,0x3609,0x3629,0x1566,0x1dc7,0x1c83,0x2689,0xe88,0x1688,0xe88,0x1d86,0x25e8,0x1de7,0x368a,0x2628,0x1586,0x368a,0x576e,0x4f8e,0x1e08,0x2dc8,0x3506,0xac2a,0x75ab,0x6c88,0x8c49,0xac4a,0xa3e9,0xb3a9,0xbb8a,0x9c4a,0x8c89,0x5d6a,0x6549,0xabea,0xa3e9,0x8caa,0x9429,0xa3e9,0xa3c9,0xaba9,0xc369,0xaba9,0xabc9,0xa3a8,0xa3e9,0xa3c9,0xa3c9,0xbb89,0xbb69,0xbb69,0xac0a,0x8c08,0x73e6,0x6d29,0xac2a,0x94ca,0x464a,0x1c21,0x5f2e,0x1d87,0x7468,0x854b,0x25a7,0x7732,0x25e8,0x25e7,0x2587,0x3629,0x1d86,0x1d66,0x1d66,0x1ca3,0x1d45,0x25c7,0x1d66,0x2dc7,0xb9f7,0xe88,0x1d04,0x1d45,0x1441,0x14e3,0x5e6,0x1eea,0x16a9,0x2f6c,0x16a9,0x1f0a,0xe88,0x606,0xe88,0x3eab,0x2e29,0x368a,0x2e49,0x2628,0x1e08,0x472c,0x2eaa,0x948a,0x9c6a,0xbb8a,0xb3aa,0xbb8a,0xb3ca,0xabea,0xaba9,0xaba9,0xbb69,0xb389,0xabc9,0xa3e9,0x9c09,0xa3c9,0x8be8,0x6c47,0x6ce9,0x6569,0x5d69,0x5589,0x6467,0x5dca,0x4da9,0x3c84,0x4548,0x4d88,0x55a9,0x7c68,0x7447,0x3629,0x2e08,0x25a7,0x25c7,0x2da7,0x5cc8,0xa3a9,0x3609,0x466b,0x2e29,0x4f4d,0x6ce9,0x8d4b,0x1dc7,0x46cb,0x25a7,0x2e29,0x1da7,0x1d45,0x14c3,0x16c9,0x1eea,0x16a9,0x3fee,0x16c9,0x2f8c,0xb9f7,0x0,0xb9f7,0x2f6c,0x1eea,0x274b,0x2f8c,0x3fee,0x274b,0x16a9,0x4ff0,0x37cd,0xe68,0x274b,0x1eea,0xe88,0xe88,0x1607,0xe88,0xe47,0xe88,0xe88,0xe47,0xe88,0x4da9,0x566b,0x8448,0xa40a,0x1524,0x1545,0x1d04,0x1ce4,0x2525,0xbb69,0x9ba8,0x2d05,0x3567,0x3da8,0x2525,0x24e5,0x2c83,0x2c43,0x2567,0x2442,0x2442,0x1d25,0x2462,0x4f2d,0x2421,0x25c7,0x2e08,0x1c42,0x25a7,0x1586,0x2525,0x2e08,0x1da7,0x4f0c,0x46cc,0x1ca3,0xb389,0x7ed1,0x3e8a,0x25c7,0x46cb,0x4dc9,0x4c45,0x25c7,0x25e7,0x2e08,0x1ce4,0x1eea,0x502,0x16a9,0x37ad,0x584,0x272b,0x274b,0x274b,0x37cd,0x37ad,0xb9f7,0xe88,0x47ee,0x2f4b,0x272b,0x3fee,0x37cd,0x2f6c,0x1f0a,0x37ad,0x627,0x47ee,0x1eea,0x2f6c,0x2f8c,0x1f0a,0x47ef,0x37cd,0x274b,0xe68,0x5ff2,0xe47,0x16c9,0xdc6,0xd44,0x8c29,0xac0a,0x1dc7,0x2608,0x2e29,0x1d86,0x2d87,0xa3a8,0x5487,0x2526,0x2d46,0x2d67,0x2c84,0x2cc5,0x2566,0x2462,0x24c4,0x24e5,0x1d45,0x2dc8,0x1ce4,0x1d45,0x25a7,0x1d04,0x2e49,0x1d25,0x2e08,0x1c83,0x1d25,0x1ce4,0x25c7,0x1dc7,0x1d04,0x1504,0x45a9,0x1d45,0x1da7,0x25a7,0x15a7,0x25e8,0x3eeb,0x1e69,0x1668,0x584,0x543,0x16a9,0xe68,0x1eea,0x584,0x37ad,0x5a5,0x5ff2,0x564,0x5ff2,0x543,0x2f4b,0x647,0x16a9,0x647,0x274b,0xe68,0x272b,0x2f8c,0x16c9,0x378c,0x5a5,0x378c,0x584,0x3fee,0x272b,0x37cd,0xe88,0x16c9,0x480,0x606,0xe68,0x274b,0x16c9,0x2eaa,0x4548,0xabc9,0x4ca6,0x2e49,0x1d25,0x1d25,0x2546,0x35c8,0x8c89,0x74a9,0x2d46,0x2546,0x2566,0x4e4a,0x3dc8,0x35c8,0x2da7,0x3e09,0x25e8,0x2de8,0x2dc8,0x2d87,0x1da7,0x2e28,0x2608,0x25e8,0x2e08,0x3e8a,0xffff,0x1da7,0x1d05,0x1586,0x1d86,0x3649,0x1d05,0x3eab,0x3e6a,0x3e8a,0x1d86,0x1586,0x14c3,0x37ad,0x3fee,0x3fee,0xe88,0x1f0a,0xe88,0x3fee,0x1688,0x3fee,0x606,0x606,0x1eea,0x274b,0x5e6,0x647,0x1f0a,0x16a9,0x274b,0x5e6,0x274b,0x647,0x3fee,0x274b,0x647,0x4c2,0xde6,0x2eaa,0x15a6,0x15c6,0x15c6,0xda5,0x5c5,0x37ad,0x543,0x2f6c,0x266a,0x57d0,0x2eab,0x2e8a,0x478d,0x35e9,0x1da7,0x1da7,0x35e8,0x2dc8,0x2546,0x35e8,0x5c66,0x6447,0x3de9,0x3e09,0x3e09,0x3dc9,0x3609,0x35c8,0x3609,0x3629,0x3e09,0x3649,0x2de8,0x2e09,0x3e8a,0x3649,0x2e29,0xffff,0x3669,0xffff,0xff80,0xffff,0x2e29,0x3649,0xffff,0x3669,0x1de7,0x14a2,0x1504,0x6750,0x1545,0x1e07,0x15a6,0x272b,0x3fee,0x77f5,0xe47,0x5a5,0x5ff2,0x2f6c,0x2f4b,0x16a9,0x5c5,0x1688,0x5e6,0x2f6c,0x606,0x3fce,0x585,0x376c,0x2587,0x3eac,0x2525,0xef1b,0xeefb,0xc5d6,0xd637,0xcdd5,0xde78,0xbd54,0xe6da,0xc5b5,0xc595,0xbd33,0xbcf1,0xbd32,0xde16,0xde16,0xb4f2,0xbd32,0xcdb5,0x1e28,0x2689,0x2669,0x2e29,0x3629,0x2586,0x1c82,0x2546,0x2546,0x2526,0x24c5,0x24e5,0x3e2a,0x2421,0x23a0,0x4e8b,0x2483,0x1c83,0x25a7,0x1d45,0x1d05,0x1da7,0x1c41,0x2608,0x25e8,0xffff,0xff80,0xffff,0x2608,0xffff,0x2608,0x2de8,0xffff,0xff80,0xffff,0x1d25,0x15a6,0x1d86,0x1d66,0x470c,0x1565,0x1eea,0x272b,0x606,0x564,0xe68,0x1f0a,0x16a9,0x2567,0xc5f7,0xce17,0xbd75,0xbd74,0xbd54,0xbd32,0xcd94,0xcd94,0xbd12,0xbcf1,0xbd12,0xd5d5,0xcd53,0xc553,0xbd12,0xd5d4,0xc511,0xd5b4,0xc532,0xcd52,0xcd32,0xd531,0xccf1,0xcd32,0xc511,0xc532,0xb4b0,0xde16,0xc553,0xd5d5,0xc553,0x372c,0x2628,0x2649,0x1d45,0x4f0c,0x570d,0x2421,0x1d66,0x35e8,0x3e09,0x464a,0x3e09,0x56cc,0x5ecc,0x35e8,0x3e29,0x35e8,0x3649,0x1d66,0x1d86,0x14e3,0x1d25,0x1de7,0x1d87,0x1e08,0x2608,0xffff,0x1586,0x1504,0x25e8,0x1d86,0x25e8,0x1d25,0xffff,0xe88,0x2de8,0x1d66,0x2608,0x25a7,0x35c9,0x4569,0x4445,0xe698,0xc574,0xc574,0xc553,0xc4f1,0xbcb0,0xc4f1,0xbcd0,0xcd32,0xcd31,0xcd31,0xcd11,0xc511,0xc511,0xc511,0xc4f1,0xbcd0,0xb48f,0xc532,0xac6f,0xbcf1,0xde16,0xd5b4,0xc553,0xde16,0xb4f2,0xc574,0xb4f2,0xbd74,0xbd54,0xb533,0xd616,0xd637,0xbd54,0xde99,0xb554,0xdeb9,0xbdb6,0xb40,0x372c,0x2628,0x25e8,0x25e8,0x574e,0x35e8,0x24c4,0x2d05,0x24e4,0x2442,0x24e4,0x35e8,0x35e9,0x35e9,0x3e2a,0x4f2d,0x1d45,0x2e28,0x2e08,0x1524,0x1d45,0x1545,0x1565,0x25c7,0x1d86,0x1de7,0x3629,0x2da8,0x4548,0x5dcb,0x5d29,0x54c7,0x6ce9,0x6c67,0x84cb,0xd5d5,0x8ccc,0xc4f1,0xc4d0,0xc4d0,0xbcaf,0xcd31,0xd552,0xd594,0xcd72,0xbd12,0xa44f,0xb4f1,0xbcf1,0xbd12,0xc574,0xbd33,0xbd54,0xbd54,0xc5d6,0xe6da,0xce17,0xd638,0xc574,0xd637,0xcdf6,0xd679,0xad13,0xad34,0xdeba,0xc5f6,0xa4b1,0xc5b5,0xb554,0xc617,0xce59,0xad55,0xdefb,0xb596,0xce59,0x9492,0xd69a,0xce79,0xc618,0xc81,0x36eb,0x2e69,0x3eeb,0x3e8a,0x3649,0x2587,0x2e08,0x2d87,0x3e4a,0x3547,0x5e4b,0x55ea,0x4528,0x5d69,0x4d28,0x5549,0x6529,0x6d29,0x750a,0x852b,0x8ceb,0x7d4a,0x7d0b,0x950c,0xbcd0,0xbcf1,0xbd11,0xcd73,0xd5d5,0xc573,0xd616,0xc574,0xd617,0xde57,0xcdf6,0xcdb5,0xe677,0xcd94,0xacf2,0xacd2,0xacf2,0x9c4f,0xacb1,0xacf2,0xb554,0xc5b6,0xb574,0xdeba,0xce79,0xc638,0xce79,0xbdf7,0xbdd7,0x9cd3,0x9cd3,0xa514,0xad55,0xad55,0xad75,0xbdd6,0xc5d6,0xad13,0xa4b1,0xa4b1,0xad13,0xc5d6,0xb575,0xa514,0xc618,0xbdd7,0xd69a,0xce59,0xce79,0xb596,0xb596,0xa534,0x8430,0xa534,0xdedb,0x1e48,0x1e28,0x15a6,0x1da7,0x4eec,0x4609,0x668c,0x4527,0x75ed,0xbd33,0xbd53,0xbd32,0xbd11,0xbcb0,0xbc8f,0xbc8f,0xbc8f,0xbcd0,0xbcaf,0xbcd0,0xbcf1,0xbd12,0xbd33,0xde57,0xd616,0xd616,0xde37,0xcdb5,0xe698,0xde16,0xacd1,0xe698,0xb533,0xbd75,0xe6da,0xd658,0xbdd6,0xce38,0xc5d6,0xd658,0xcdf6,0xbd74,0xa4f3,0xad75,0x8c71,0xb596,0x7bef,0x8c71,0xc638,0xa534,0xce79,0xb596,0xd69a,0xd69a,0xad75,0xb5b6,0xad75,0xb5b6,0xb596,0xa534,0xbdf7,0xbdd7,0xc618,0xb596,0xbdd7,0xbdf7,0xdedb,0xb5b6,0xad55,0xad55,0x9cd3,0xb5b6,0xbdd7,0xad75,0xc618,0xb5b6,0x8c71,0xb596,0xad55,0xad75,0x4ecc,0x7dce,0xd617,0xbd12,0xd5d5,0xbcd1,0xbcd0,0xd572,0xcd73,0xccf0,0xc4cf,0xc4d0,0xbcf1,0xe636,0xde58,0xde99,0xe6b9,0xde99,0xad13,0xde58,0xa491,0xb4f2,0xacf2,0xbd74,0xb533,0xb554,0xb554,0xb574,0xd658,0xb554,0xd658,0xa4d2,0xd638,0xeefb,0xacf3,0xd678,0xbd95,0xbd75,0xb574,0xd679,0xef3c,0xdedb,0xdefb,0x8c51,0xd6ba,0xad75,0xc618,0xb596,0xad75,0x94b2,0xa534,0xad55,0xa514,0x9cd3,0xb5b6,0xbdf7,0xad55,0x9cf3,0x8c51,0xad75,0xbdd7,0xb575,0xbd74,0xbd54,0xb512,0xb4d1,0xb4b1,0xc553,0xb512,0xb533,0xbd74,0xb4d1,0xb4f2,0xbd12,0xb4f1,0xbd53,0xad34,0xb596,0xc5f7,0xf79d,0xde16,0xc4f1,0xcd31,0xc4f0,0xd531,0xc4d0,0xbcd0,0xbd12,0xacd1,0xb512,0xb513,0xb4f2,0xbd54,0xacf2,0xb534,0xc5b6,0xad13,0xce58,0xb575,0xb595,0xad55,0xb5b6,0xc638,0xe71c,0xce79,0xd6ba,0xb596,0xb5b6,0xa514,0xdedb,0xdefb,0xce79,0xb5b6,0xb596,0xdedb,0xbdd7,0xbdf7,0xbdd7,0xbdf7,0x9cf3,0x8c71,0x8c71,0x9cd3,0xa514,0xb596,0xb596,0xb5b6,0xbdf7,0xc618,0xc638,0xb5b6,0xb5b6,0xb596,0xb596,0xbdd6,0xbdd6,0xc5d6,0xcdf6,0xb512,0xb4d1,0xbcd1,0xc512,0xbd33,0xcdd5,0xbd54,0xcdb5,0xb4f2,0xc573,0xbcf1,0xbcf1,0xc532,0xbd12,0xbd53,0xbd53,0xbd32,0xc553,0xc532,0xbd11,0xc532,0xbcf1,0xb513,0xacd2,0x8bee,0xb575,0xc5f7,0xf79e,0xc618,0xde99,0xcdd6,0xd699,0xd69a,0xd6ba,0xce59,0xdefb,0xa514,0xbdd7,0xc618,0xa514,0xbdd7,0x8430,0xc618,0xbdd7,0xc638,0xb5b6,0xbdd7,0xc618,0x9cd3,0xbdd7,0xa534,0xce79,0xad55,0xdedb,0x9cf3,0xbdd7,0xa514,0xad55,0xa514,0xa534,0xa534,0xc618,0xad75,0xb5b6,0xb596,0xb575,0xb533,0xbd33,0xb4f1,0xbd12,0xbd12,0xbd53,0xbd53,0xbd33,0xcd94,0xcd94,0xc532,0xc532,0xc552,0xc553,0xde16,0xc532,0xbcd1,0xc532,0xc532,0xc512,0xc532,0xbd53,0xc553,0xc553,0xbd32,0xbd12,0xbd12,0xbcf1,0xde15,0xa530,0x95b1,0x8dd1,0x75f0,0x660f,0x5e0e,0x460c,0xb5b6,0xd6ba,0xc638,0x9cd3,0x8c71,0xc618,0x9492,0x7bcf,0x9cb2,0xb512,0xb554,0xc617,0xbdf7,0xd6ba,0x9492,0xe71c,0xb596,0xce79,0x9cf3,0xb5b6,0x9cf3,0xb596,0xb596,0x9cf3,0x9492,0x8c51,0x9cf3,0x8410,0xce59,0x9cf3,0xbdf7,0xa514,0xc638,0xbdd7,0xb596,0xb596,0xad55,0xc638,0xb554,0xb554,0xc574,0xc553,0xc532,0xbd12,0xc553,0xc573,0xcd94,0xc532,0xc532,0xc511,0xbd12,0xbd11,0xbcf1,0xd5d5,0xb4d0,0x94cd,0x94cd,0x950e,0x8d2e,0x8d2e,0x950e,0x94ed,0x94ed,0x8ccd,0x84ed,0x7d0d,0x754d,0x6d4d,0x656d,0x7630,0x6e0f,0x660f,0x5dce,0x55cd,0x45cc,0x3dab,0x3dcb,0x35aa,0x2dca,0x25c9,0xbdf7,0xa514,0xb596,0x9cf3,0x94b2,0xbdd7,0xd6ba,0xbdf7,0xa514,0xa4f3,0xb534,0xbd53,0xa490,0x9c70,0xbd33,0xa490,0xb4f2,0xb533,0xad75,0xb596,0xb596,0xb596,0xc618,0xbdf7,0xb596,0xad75,0xb596,0xad34,0xad75,0xc638,0xce59,0xb596,0xce59,0xbdf7,0xbdd6,0xb554,0xc594,0xcd73,0xc553,0xc532,0xbd12,0xbd11,0xbd12,0xbd32,0xbd11,0x754b,0x7d6c,0x754b,0x656b,0x554a,0x5e0c,0x4569,0x3da9,0x4d28,0x652a,0x752b,0x64c9,0x6cc9,0x5cc8,0x4cc8,0x4daa,0x3deb,0x25a8,0x1d67,0x1d88,0x1d47,0x1ce5,0x14e5,0x1547,0x25e9,0x2e4a,0x1588,0x1567,0x2e0a,0x2e2a,0x1588,0x25e9,0x25e9,0x25e9,0x1e09,0x664f,0x9492,0xb596,0xa514,0xad55,0xad55,0xc618,0xdedb,0xbdf7,0xb5b6,0xa514,0xad75,0xb5b6,0xbdf7,0xb5b6,0xad75,0xad75,0xbdf7,0xd6ba,0xbdf7,0xc618,0xbdd7,0xbdf7,0xb596,0xbdf7,0xbdb5,0xbd53,0xbd12,0xbd11,0xb4f1,0xcdd5,0xc574,0xbd32,0xc532,0xbcf1,0xbd11,0xc532,0xbd53,0xc595,0x4528,0x5508,0x64a8,0x64a8,0x6487,0x6ca8,0x5d49,0x4ce7,0x4d69,0x4d28,0x54e8,0x5cc8,0x64a8,0x5d08,0x4507,0x3d06,0x2526,0x1586,0x544,0x5c5,0x607,0xe27,0x5e6,0x5a5,0x544,0x5c6,0x1628,0x4e2,0x4e3,0xde7,0xd86,0xde7,0xe08,0xdc6,0xd65,0xd86,0x26aa,0x1e69,0x1e69,0x1e69,0x1669,0x566e,0xbdf7,0xbdd7,0xc638,0xbdf7,0xbdf7,0xbdd7,0xb5b6,0xc618,0xce59,0xbdd7,0xc618,0xce59,0xd6ba,0xb5b6,0xd6ba,0xce59,0xce59,0xc618,0xce59,0xce58,0xd699,0xce38,0xbd74,0xc533,0xbd12,0xbd12,0xbcf1,0xbd12,0x6ca8,0x5ca7,0x5529,0x64e9,0x54e8,0x4548,0x4527,0x54e7,0x6487,0x5529,0x4548,0x35a8,0x1dc7,0xda6,0xde7,0x1dc7,0x2587,0x2d67,0x2d67,0x2d25,0x2546,0x1504,0xd64,0x503,0x5a5,0xe27,0x584,0x564,0x5e6,0x585,0x627,0x585,0x584,0x523,0x564,0x543,0x5e6,0xe48,0x647,0x606,0x606,0x5a5,0x5e6,0x5a5,0x543,0x544,0x523,0x16a9,0x16a9,0x16a9,0x16a9,0xe71c,0xce59,0xd69a,0xce59,0xd6ba,0xbdf7,0xc618,0xce59,0xc638,0xc618,0xc638,0xce79,0xc618,0xbdd7,0xc618,0xc618,0xc618,0xce59,0xde78,0x4485,0x5487,0x5c05,0x5c25,0x63e5,0x5466,0x4c65,0x5486,0x5c67,0x5c66,0x5c46,0x3c84,0x758b,0x75ab,0x5508,0x5569,0x3da8,0x25c8,0x15e7,0x1628,0xe27,0x1628,0x1648,0x1648,0xe27,0x1668,0x1668,0x1668,0xe27,0xe48,0xe47,0xe27,0x1ea9,0x16a9,0x1668,0xe48,0x1689,0x1689,0x1689,0x16a9,0xe48,0x627,0xe27,0x5e6,0x272b,0x1eea,0xe48,0xe48,0xe48,0xe48,0x1688,0x627,0x1688,0x627,0x1688,0x1688,0x627,0x16a9,0x16a9,0x16a9,0x16a9};
Image bg = Image(bgData);

const uint16_t cloud1Data[] = { 24,8,1, 1, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xef5d,0xffff,0xffff,0xffff,0xffff,0xffff,0xffdf,0xffdf,0xffdf,0xf7be,0xf7be,0xf7be,0xf79e,0xf79e,0xf79e,0xf79e,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xe73c,0xffdf,0xf7be,0xef7d,0xef5d,0xf79e,0xffdf,0xffdf,0xffff,0xffdf,0xef5d,0xef5d,0xffdf,0xffdf,0xf7be,0xf7be,0xffff,0xf7be,0xbdf7,0xF81F,0xF81F,0xbdf7,0xe73c,0xffdf,0xffdf,0xffdf,0xffff,0xffdf,0xf79e,0xf79e,0xf7be,0xef7d,0xef5d,0xef5d,0xef7d,0xf79e,0xf7be,0xffdf,0xf79e,0xf7be,0xffdf,0xf7be,0xef5d,0xF81F,0xF81F,0xe73c,0xf79e,0xf79e,0xf79e,0xf7be,0xf7be,0xf79e,0xef5d,0xef5d,0xef7d,0xef7d,0xf7be,0xffdf,0xffff,0xffff,0xffff,0xf7be,0xf79e,0xf7be,0xffff,0xffff,0xef7d,0xdedb,0xF81F,0xef5d,0xef7d,0xf7be,0xf7be,0xffdf,0xffdf,0xffdf,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xf7be,0xf7be,0xffff,0xffdf,0xf7be,0xffdf,0xffff,0xffdf,0xe73c,0xF81F,0xef7d,0xf7be,0xf7be,0xef7d,0xef7d,0xf79e,0xf7be,0xf7be,0xffdf,0xf7be,0xf7be,0xf7be,0xf79e,0xf79e,0xffdf,0xffff,0xf7be,0xef7d,0xef5d,0xef5d,0xe73c,0xdefb,0xF81F,0xF81F,0xF81F,0xF81F,0xe73c,0xf7be,0xF81F,0xF81F,0xf79e,0xf79e,0xef7d,0xef5d,0xe71c,0xdefb,0xe71c,0xe73c,0xef5d,0xef7d,0xf79e,0xef7d,0xf79e,0xf79e,0xf79e,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xf7be,0xffdf,0xffff,0xffff,0xffdf,0xe71c,0xbdf7,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F };
Image cloud1 = Image(cloud1Data);
Image* cloud1_ptr = &cloud1;

const uint16_t cloud2Data[] = { 36,10,1, 1, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xef5d,0xffdf,0xffdf,0xffdf,0xffdf,0xffff,0xffff,0xffff,0xffff,0xffdf,0xf7be,0xffdf,0xffdf,0xffff,0xffff,0xffff,0xffff,0xffdf,0xf79e,0xef7d,0xef5d,0xef5d,0xe73c,0xef7d,0xf79e,0xef7d,0xef5d,0xef5d,0xf79e,0xf7be,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xef7d,0xf79e,0xf79e,0xf79e,0xf79e,0xf7be,0xf7be,0xffdf,0xffdf,0xffdf,0xf7be,0xf79e,0xef7d,0xef7d,0xf79e,0xef7d,0xf79e,0xf7be,0xf79e,0xe73c,0xe73c,0xe73c,0xdefb,0xd69a,0xd6ba,0xe73c,0xf79e,0xf7be,0xf79e,0xf79e,0xf7be,0xffdf,0xF81F,0xF81F,0xe71c,0xe73c,0xe73c,0xe73c,0xef5d,0xef5d,0xe73c,0xe73c,0xdefb,0xdedb,0xdefb,0xe71c,0xe73c,0xef5d,0xef7d,0xef7d,0xf79e,0xffdf,0xffff,0xffdf,0xef7d,0xe73c,0xef5d,0xf79e,0xf79e,0xf7be,0xf7be,0xf7be,0xffdf,0xffff,0xffdf,0xffdf,0xffdf,0xffff,0xffff,0xF81F,0xe73c,0xf7be,0xf7be,0xf7be,0xf79e,0xf79e,0xf79e,0xf79e,0xef7d,0xef5d,0xe73c,0xef5d,0xef5d,0xef7d,0xef7d,0xef7d,0xef7d,0xf7be,0xffdf,0xffdf,0xf79e,0xef7d,0xf79e,0xf7be,0xf7be,0xf7be,0xf7be,0xf79e,0xf7be,0xffdf,0xffdf,0xffdf,0xffff,0xffff,0xffff,0xffff,0xF81F,0xF81F,0xe71c,0xf7be,0xffdf,0xffdf,0xffdf,0xffdf,0xffdf,0xf7be,0xf79e,0xf79e,0xf79e,0xf79e,0xf79e,0xf79e,0xef7d,0xf79e,0xf7be,0xffdf,0xf79e,0xef7d,0xf7be,0xffff,0xffdf,0xf7be,0xf79e,0xef7d,0xef7d,0xef7d,0xf79e,0xf79e,0xf79e,0xf7be,0xffdf,0xffdf,0xF81F,0xF81F,0xF81F,0xF81F,0xd6ba,0xef7d,0xf7be,0xffdf,0xffdf,0xf7be,0xf7be,0xf79e,0xef7d,0xef7d,0xf79e,0xf7be,0xf79e,0xef7d,0xf79e,0xf7be,0xef7d,0xef5d,0xf79e,0xffff,0xffff,0xf7be,0xf79e,0xef7d,0xef7d,0xef7d,0xef5d,0xef7d,0xef7d,0xef7d,0xf79e,0xf7be,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xb5b6,0xce79,0xd6ba,0xdefb,0xdedb,0xdedb,0xd6ba,0xd69a,0xdefb,0xef7d,0xf79e,0xf79e,0xf79e,0xf7be,0xf79e,0xef5d,0xef7d,0xf7be,0xffff,0xffff,0xffdf,0xffdf,0xef7d,0xef5d,0xe73c,0xe73c,0xe71c,0xe73c,0xef7d,0xef7d,0xf79e,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xb5b6,0xdedb,0xdefb,0xdefb,0xdefb,0xF81F,0xF81F,0xF81F,0xF81F,0xe73c,0xef7d,0xef7d,0xf7be,0xf79e,0xf79e,0xef7d,0xef5d,0xef5d,0xef5d,0xf79e,0xef5d,0xe73c,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xf7be,0xf79e,0xf79e,0xef7d,0xef7d,0xef7d,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F };
Image cloud2 = Image(cloud2Data);
Image* cloud2_ptr = &cloud2;

const uint16_t playerData[] = { 8,8,1, 1, 0xF81F, 0, 0xF81F,0x4208,0x4208,0x4208,0x4208,0xF81F,0xF81F,0x5acb,0xF81F,0x4208,0xff74,0xff78,0xff78,0xff75,0xF81F,0x5acb,0xF81F,0x4208,0xff76,0x5acc,0xc5f4,0x4a49,0xF81F,0x5acb,0xb261,0xfbe4,0xff75,0xf779,0xf779,0xff76,0xF81F,0x5acb,0xbaa1,0xd344,0x4208,0x5acb,0x738e,0x62eb,0xff74,0xbbca,0xfbe4,0xb261,0x736d,0x8803,0x8803,0x4208,0xF81F,0xF81F,0xF81F,0xF81F,0x5acb,0x62eb,0x4208,0x62eb,0xF81F,0xF81F,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xff74,0xF81F,0xF81F };
Image player = Image(playerData);

const uint16_t playerWalkData[] = { 8,8,2, 3, 0xF81F, 0, 0xF81F,0x4208,0x4208,0x4208,0x4208,0xF81F,0xF81F,0x5acb,0xF81F,0x4208,0xff74,0xff78,0xff78,0xff75,0xF81F,0x5acb,0xF81F,0x4208,0xff76,0x5acc,0xc5f4,0x4a49,0xF81F,0x5acb,0xF81F,0xb261,0xb261,0xf779,0xf779,0xff76,0xF81F,0x5acb,0xF81F,0xb281,0xb281,0x5acb,0x738e,0x62eb,0xff74,0xbbca,0xF81F,0xbaa1,0xbaa1,0x8803,0x8803,0x4208,0xF81F,0xF81F,0xF81F,0xF81F,0x5acb,0x62eb,0x4208,0x62eb,0xF81F,0xF81F,0xF81F,0xF81F,0xff74,0xF81F,0xff74,0xF81F,0xF81F,0xF81F,0xF81F,0x4208,0x4208,0x4208,0x4208,0xF81F,0xF81F,0x5acb,0xF81F,0x4208,0xff74,0xff78,0xff78,0xff75,0xF81F,0x5acb,0xF81F,0x4208,0xff76,0x5acc,0xc5f4,0x4a49,0xF81F,0x5acb,0xb261,0xfbe4,0xff75,0xf779,0xf779,0xff76,0xF81F,0x5acb,0xbaa1,0xd344,0x4208,0x5acb,0x738e,0x62eb,0xff74,0xbbca,0xfbe4,0xb261,0x736d,0x8803,0x8803,0x4208,0xF81F,0xF81F,0xF81F,0xF81F,0x5acb,0x62eb,0x4208,0x62eb,0xF81F,0xF81F,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xff74,0xF81F,0xF81F };
Image playerWalk = Image(playerWalkData);

const uint16_t coinData[] = { 5,5,1, 1, 0xF81F, 0, 0xF81F,0xe5a3,0xff34,0xedc5,0xF81F,0xddc0,0xe500,0xd460,0xdce0,0xe624,0xe5e7,0xeda0,0xfee0,0xf580,0xf649,0xee64,0xfe00,0xfdc0,0xfec0,0xe640,0xF81F,0xe5a4,0xee71,0xe642,0xF81F };
Image coin = Image(coinData);

const uint16_t heartData[] = { 5,5,1, 1, 0xF81F, 0, 0xF81F,0xc124,0xF81F,0xc124,0xF81F,0xc124,0xf841,0xc124,0xf841,0xc124,0xc124,0xf841,0xf841,0xf841,0xc124,0xF81F,0xc124,0xf841,0xc124,0xF81F,0xF81F,0xF81F,0xc124,0xF81F,0xF81F };
Image heart = Image(heartData);

const uint16_t playerAttackData[] = { 8,8,3, 3, 0xF81F, 0, 0x4208,0x4208,0x4208,0x4208,0xF81F,0xF81F,0xF81F,0xF81F,0x4208,0xff74,0xff78,0xff78,0xff75,0xffff,0xF81F,0xffff,0x4208,0xff76,0x5acc,0xc5f4,0x4a49,0xF81F,0xffff,0xc618,0xb261,0xfbe4,0xf779,0xf779,0xff76,0xF81F,0xc618,0x5acb,0xbaa1,0xd344,0x5acb,0x738e,0x62eb,0xF81F,0x5acb,0xc618,0xfbe4,0xb261,0x8803,0x8803,0x4208,0xbbca,0xF81F,0xF81F,0xF81F,0x5acb,0x62eb,0x4208,0x62eb,0xF81F,0xF81F,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xF81F,0x4208,0x4208,0x4208,0x4208,0xF81F,0xF81F,0xF81F,0xF81F,0x4208,0xff74,0xff78,0xff78,0xff75,0xF81F,0xF81F,0xF81F,0x4208,0xff76,0x5acc,0xc5f4,0x4a49,0xffff,0xF81F,0xF81F,0x4208,0xff74,0xf779,0xf779,0xff76,0xF81F,0xffff,0xF81F,0xb261,0xfbe4,0x738e,0x62eb,0xF81F,0xffff,0xF81F,0xffff,0xbaa1,0xd344,0x8803,0x4208,0xbbca,0x5acb,0x5acb,0x5acb,0xfbe4,0xb261,0x4208,0x62eb,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xF81F,0xF81F,0x4208,0x4208,0x4208,0x4208,0xF81F,0xF81F,0x5acb,0xF81F,0x4208,0xff74,0xff78,0xff78,0xff75,0xF81F,0x5acb,0xF81F,0x4208,0xff76,0x5acc,0xc5f4,0x4a49,0xF81F,0x5acb,0xb261,0xfbe4,0xff75,0xf779,0xf779,0xff76,0xF81F,0x5acb,0xbaa1,0xd344,0x4208,0x5acb,0x738e,0x62eb,0xff74,0xbbca,0xfbe4,0xb261,0x736d,0x8803,0x8803,0x4208,0xF81F,0xF81F,0xF81F,0xF81F,0x5acb,0x62eb,0x4208,0x62eb,0xF81F,0xF81F,0xF81F,0xF81F,0xff74,0xF81F,0xF81F,0xff74,0xF81F,0xF81F };
Image playerAttack = Image(playerAttackData);

const uint16_t enemyWalkData[] = { 8,8,2, 2, 0xF81F, 0, 0xF81F,0xe8e4,0x90e4,0xe8e4,0x90e4,0xF81F,0x5acb,0xF81F,0xF81F,0xe8e4,0x9451,0xc618,0x9451,0xc618,0x5acb,0xF81F,0xF81F,0x90e4,0xc618,0xb9f7,0xc618,0xb9f7,0x5acb,0xF81F,0xF81F,0x0,0x5acb,0xc618,0xc618,0xc618,0x5acb,0xF81F,0xF81F,0x41e7,0x41e7,0x90e4,0xc166,0xd0c7,0xbbca,0xF81F,0xF81F,0x5acb,0x0,0x5acb,0x5acb,0xe8e4,0xF81F,0xF81F,0xF81F,0xF81F,0xe8e4,0xb062,0xe8e4,0xb062,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc618,0xF81F,0xc618,0xF81F,0xF81F,0xF81F,0xe8e4,0x90e4,0xe8e4,0x90e4,0xF81F,0xF81F,0x5acb,0xF81F,0xe8e4,0x9451,0xc618,0x9451,0xc618,0xF81F,0x5acb,0xF81F,0x90e4,0xc618,0xb9f7,0xc618,0xb9f7,0xF81F,0x5acb,0x5acb,0x0,0x9451,0xc618,0xc618,0xc618,0xF81F,0x5acb,0x41e7,0x41e7,0xc166,0x90e4,0xc166,0xd0c7,0xc618,0xbbca,0x0,0x5acb,0xb062,0x5acb,0x5acb,0xe8e4,0xF81F,0xF81F,0xF81F,0xF81F,0xe8e4,0xb062,0xe8e4,0xb062,0xF81F,0xF81F,0xF81F,0xF81F,0xc618,0xF81F,0xF81F,0xc618,0xF81F,0xF81F };
Image enemyWalk = Image(enemyWalkData);

const uint16_t arrowData[] = { 3,6,1, 1, 0xF81F, 0, 0x8803,0xbbca,0x8803,0xF81F,0x8803,0xF81F,0xF81F,0xbbca,0xF81F,0xF81F,0xbbca,0xF81F,0x5acb,0xbbca,0x5acb,0xF81F,0x5acb,0xF81F };
Image arrow = Image(arrowData);

const uint16_t twtData[] = { 8,8,1, 1, 0xF81F, 0, 0xF81F,0xF81F,0x63f,0x63f,0x63f,0x63f,0xF81F,0xF81F,0xF81F,0x63f,0xffff,0x63f,0x63f,0x63f,0x63f,0xF81F,0x63f,0x63f,0xffff,0xffff,0xffff,0xffff,0x63f,0x63f,0x63f,0x63f,0xffff,0x63f,0x63f,0x63f,0x63f,0x63f,0x63f,0x63f,0xffff,0x63f,0x63f,0x63f,0x63f,0x63f,0x63f,0x63f,0xffff,0xffff,0x63f,0x63f,0x63f,0x63f,0xF81F,0x63f,0x63f,0xffff,0xffff,0xffff,0x63f,0xF81F,0xF81F,0xF81F,0x63f,0x63f,0x63f,0x63f,0xF81F,0xF81F };
Image twt = Image(twtData);

Image* playerAnimation = &player;

const char* menuEntries[] = { "Play", "How to Play", "Credits" };

int16_t pScore = 0;
int16_t pTopScore = gb.save.get(0);

int8_t cloud1Movement = 0;
int8_t cloud2Movement = 40;
int8_t cloud3Movement = 100;
int8_t cloud4Movement = 120;

bool isHardMode = false;
bool isSuperHardMode = false;
int8_t hardModeThreshold = 30;
int8_t superHardModeThreshold = 60;

//game states
const byte TITLE_SCREEN = 4;
const byte IN_GAME = 0;
const byte HOW_TO_PLAY = 1;
const byte CREDITS = 2;
const byte DEATH_SCREEN = 3;

int8_t mode = TITLE_SCREEN;

//player vars
int8_t pPosX = 35;
int8_t pPosY;
int8_t pOrientation = 1;
int8_t pAcceleration = 0;
bool pIsAlive = true;
int8_t pLives = 3;

//attack variables
bool isAttacking = false;
bool isEnemyHit = false;
bool isPlayerHit = false;
const int8_t attackRange = 4;
int8_t hitInvulnerabilityCountDown = 0;
bool isPlayerInvulnerable = false;

//variables needed to animate attack
int8_t attackFrameCounter = 8;
int8_t attackCooldown = 0;
int8_t arrowSpawnCooldown = 0;

//coin 
bool isCoinOnScreen = false;
int8_t cPosX;
int8_t cPosY = 0;

//arrow
bool isArrowOnScreen = false;
int8_t arrowPosX;
int8_t arrowPosY = 0;
int8_t arrowSpeed = 1;
const int8_t arrowSpawnScoreThreshold = 5;

//enemy variables
int8_t ePosX = 0;
int8_t ePosY;
int8_t eOrientation = 1;
int8_t enemySpawnCooldown = 0;
const int8_t enemySpawnScoreThreshold = 15;
bool isEnemyOnScreen = false;



void resetToDefaults()
{
	pScore = 0;
	pLives = 3;
	pIsAlive = true;
	isCoinOnScreen = false;
	isAttacking = false;
	isEnemyHit = false;
	isEnemyOnScreen = false;
	isPlayerHit = false;
	isArrowOnScreen = false;
	gb.lights.clear();
	pPosX = 35;
}


void setup() {
	gb.begin();
	pPosY = gb.display.height() - 12;
	ePosY = gb.display.height() - 12;
	gb.pickRandomSeed();
}

void loop() {
	while (!gb.update());
	gb.display.clear();

	switch (mode)
	{
	case TITLE_SCREEN: //title screen menu

		mode = gb.gui.menu("      COINAGE", menuEntries);
		break;

	case IN_GAME: //in game
		if (pIsAlive)
		{
			//draw background
			gb.display.drawImage(0, 6, bg);
			
			gb.display.drawImage(gb.frameCount % 5 == 0 ? cloud1Movement++ : cloud1Movement, 7, cloud1);
			gb.display.drawImage(gb.frameCount % 3 == 0 ? cloud2Movement++ : cloud2Movement, 7, cloud2);

			gb.display.drawImage(gb.frameCount % 4 == 0 ? cloud3Movement++ : cloud3Movement, 10, *cloud1_ptr);
			gb.display.drawImage(gb.frameCount % 3 == 0 ? cloud4Movement++ : cloud4Movement, 10, *cloud2_ptr);

			//draw interface
			gb.display.drawFastHLine(0, 6, gb.display.width());
			gb.display.setColor(RED);
			gb.display.print(pScore);
			gb.display.setCursorX(74);
			gb.display.print(pLives);
			gb.display.drawImage(68, 0, heart);

			//get movement input
			if (gb.buttons.repeat(BUTTON_LEFT, 0) && pPosX > 0)
			{
				pAcceleration++;
				pOrientation = -1;
				if (pAcceleration > 5)
					pPosX -= 2;
				else
					pPosX -= 1;

				if (pPosX <= 0)
					pPosX = 0;

			}
			else if (gb.buttons.repeat(BUTTON_RIGHT, 0) && pPosX < gb.display.width() - player.width())
			{
				pAcceleration++;
				pOrientation = 1;

				if (pAcceleration > 5)
					pPosX += 2;
				else
					pPosX += 1;

				if (pPosX >= gb.display.width() - player.width())
					pPosX = gb.display.width() - player.width();

			}
			else
			{
				pAcceleration = 0;
			}

			//get attack button input
			if (gb.buttons.pressed(BUTTON_A) && attackCooldown == 0) //if the button is pressed and the cooldown expired
			{
				isAttacking = true;
				attackFrameCounter = 8;
				attackCooldown = 12;
				if (pOrientation > 0 && isEnemyOnScreen) //if the enemy is facing right
				{
					if (pPosX + player.width() + attackRange >= ePosX 
						&& pPosX + player.width() + attackRange <= ePosX + enemyWalk.width())
					{
						isEnemyHit = true;
					}
					else
					{
						isEnemyHit = false;
					}
				}
				else if (pOrientation < 0 && isEnemyOnScreen) //if the enemy is facing left
				{
					if (pPosX - attackRange <= ePosX + enemyWalk.width()
						&& pPosX - attackRange >= ePosX)
					{
						isEnemyHit = true;
					}
					else
					{
						isEnemyHit = false;
					}
				}
				else
				{
					isEnemyHit = false;
				}
			}
			else //if the attack button is not pressed
			{
				attackFrameCounter--;
				attackCooldown--;

				if (attackCooldown < 0)
				{
					attackCooldown = 0;
				}

				if (attackFrameCounter >= 0 && attackFrameCounter <= 8 && isAttacking) //maintain the isAttacking flag for the duration of the attack animation
				{
					isAttacking = true;
				}

				if (attackFrameCounter <= 0) //wait till entire attack animation counts down before setting attack to false
				{
					isAttacking = false;
					playerAttack.setFrame(0);
					attackFrameCounter = 0;
				}
			}

			//get back to menu button input
			if (gb.buttons.held(BUTTON_MENU, 25))
			{
				mode = TITLE_SCREEN;
				resetToDefaults();
			}

			//spawn a coin if there is none
			if (!isCoinOnScreen)
			{
				cPosY = 8;
				cPosX = random(coin.width(), gb.display.width() - coin.width());
				isCoinOnScreen = true;

			}
			else //if there is a coin, move it
			{
				cPosY++;
				if (cPosY + coin.height() >= gb.display.height())
				{
					isCoinOnScreen = false;
					pScore -= 5;
					gb.sound.playCancel();
					
				}
			}

			//arrow spawn
			if (!isArrowOnScreen && pScore >= arrowSpawnScoreThreshold && arrowSpawnCooldown <= 0)
			{
				arrowPosY = 8;
				arrowPosX = random(arrow.width(), gb.display.width() - arrow.width());
				isArrowOnScreen = true;
				arrowSpeed = random(2, 4);
				if (isHardMode)
				{
					arrowSpeed += 1;
				}
				else if(isSuperHardMode)
				{
					arrowSpeed += 2;
				}

			}
			else if(isArrowOnScreen) //if arrow is already on screen, handle moving it and flashing danger lights
			{
				arrowPosY += arrowSpeed;
				byte var = map(arrowPosY, 0, 50, 0, 2);
				if (arrowPosX >= pPosX)
				{
					gb.lights.clear();
					gb.lights.drawPixel(1, var, gb.createColor(255,0,0));
				
				}
				else 
				{
					gb.lights.clear();
					gb.lights.drawPixel(0, var, gb.createColor(255, 0, 0));
				}

				if (arrowPosY + arrow.height() >= gb.display.height())
				{
					isArrowOnScreen = false;
					arrowSpawnCooldown = isHardMode ? 50 : 100;
					gb.lights.drawPixel(0, 2, BLACK);
					gb.lights.drawPixel(1, 2, BLACK);
				}

			}
			else //if arrow is not in play and the cooldown hasnt run out yet
			{
				arrowSpawnCooldown--;
				if (arrowSpawnCooldown <= -1)
				{
					arrowSpawnCooldown = isHardMode ? 50 : 100;
				}
			}

			//if the player hits a coin, pick it up and increase score
			if (cPosY + coin.height() >= pPosY)
			{
				if (pPosX <= cPosX + coin.width() && pPosX + player.width() >= cPosX)
				{
					isCoinOnScreen = false;
					pScore++;
					gb.sound.playTick();
				}

			}

			//if arrow hits player, lose a life
			if (arrowPosY + arrow.height() >= pPosY)
			{
				if (pPosX <= arrowPosX + arrow.width() && pPosX + player.width() >= arrowPosX && isArrowOnScreen && hitInvulnerabilityCountDown <= 0)
				{
					isArrowOnScreen = false;
					arrowPosX = 125;
					pLives--;
					gb.sound.playCancel();
					arrowSpawnCooldown = 100;
					hitInvulnerabilityCountDown = 50;
					gb.lights.clear();
				}

			}

			//enemy spawning logic
			if(!isEnemyOnScreen && pScore >= enemySpawnScoreThreshold && enemySpawnCooldown <= 0)
			{
				enemySpawnCooldown = isSuperHardMode ? 50 : 100;
				eOrientation = pPosX > gb.display.width() / 2 ? 1 : -1; //set enemy to spawn on the opposite 
				ePosX = eOrientation > 0 ? 0 : gb.display.width() - 8; //side of the screen relative to the player
				isEnemyOnScreen = true;
			}
			else if (isEnemyOnScreen) //if there's already an enemy on the screen
			{
				if (gb.frameCount % 2 == 0 && !isHardMode) //animate (move) the enemy every 2 frames on normal mode
					ePosX = eOrientation > 0 ? ePosX + 1 : ePosX - 1;
				else if(isHardMode) //every frame on hard mode
					ePosX = eOrientation > 0 ? ePosX + 1 : ePosX - 1;

				if (ePosX < 0 || ePosX + enemyWalk.width() > gb.display.width()) //if enemy walks out of bounds
				{
					isEnemyOnScreen = false;
					enemySpawnCooldown = isSuperHardMode ? 50 : 100;
					gb.lights.clear();
				}

				if (gb.frameCount % 2)
					gb.lights.drawPixel(ePosX > pPosX ? 1 : 0, 3, gb.createColor(255, 0, 0));
				else
					gb.lights.drawPixel(ePosX > pPosX ? 1 : 0, 3, BLACK);

			}
			else //if the enemy cooldown hasnt run out just decrease it this frame
			{
				enemySpawnCooldown--;
				if (enemySpawnCooldown <= -1)
				{
					enemySpawnCooldown = isSuperHardMode ? 50 : 100;
				}
			}

			//handle succesful player attack
			if (isEnemyHit)
			{
				isEnemyOnScreen = false;
				isEnemyHit = false;
				enemySpawnCooldown = isSuperHardMode ? 50 : 100;
				pScore++;
				gb.sound.playTick();
				gb.lights.clear();

			}
		
			//handle enemy hurting player
			if (isEnemyOnScreen && eOrientation > 0)
			{
				if (ePosX + enemyWalk.width() >= pPosX && ePosX < pPosX && hitInvulnerabilityCountDown <= 0)
				{
					isPlayerHit = true;
					hitInvulnerabilityCountDown = 50;
					pLives--;
					gb.sound.playCancel();
				}
			}
			else if (isEnemyOnScreen && eOrientation < 0)
			{
			
				if (ePosX < pPosX + player.width() && ePosX > pPosX && hitInvulnerabilityCountDown <= 0)
				{
					isPlayerHit = true;
					hitInvulnerabilityCountDown = 50;
					pLives--;
					gb.sound.playCancel();
				}
			}
			else
			{
				isPlayerHit = false;
			}

			//assign animation to player based on their state
			if (pAcceleration == 0 && !isAttacking) //standing still animation
			{
				playerAnimation = &player;
			}
			else if (!isAttacking && pAcceleration > 0) //moving animation
			{
				playerAnimation = &playerWalk;
			}
			else if (isAttacking) //attacking animation
			{
				playerAnimation = &playerAttack;
			}

			//draw player
			if (isPlayerInvulnerable)
			{
				if (gb.frameCount % 2)
				gb.display.drawImage(pPosX, pPosY, *playerAnimation, playerAnimation->width()*pOrientation, playerAnimation->height());
			}
			else
			{
				gb.display.drawImage(pPosX, pPosY, *playerAnimation, playerAnimation->width()*pOrientation, playerAnimation->height());
			}


			//draw coin
			gb.display.drawImage(cPosX, cPosY, coin);

			//draw arrow
			if (isArrowOnScreen)
			{
				gb.display.drawImage(arrowPosX, arrowPosY, arrow);
			}

			//draw enemy
			if (isEnemyOnScreen)
			{
				gb.display.drawImage(ePosX, ePosY, enemyWalk, enemyWalk.width()*eOrientation, enemyWalk.height());
			}
			
			//check player score, if its above a certain threshold - update difficulty flag
			isHardMode = pScore > hardModeThreshold ? true : false;
			isSuperHardMode = pScore > superHardModeThreshold ? true : false;
			isPlayerInvulnerable = hitInvulnerabilityCountDown > 0 ? true : false;

			hitInvulnerabilityCountDown--;
			if (hitInvulnerabilityCountDown < 0)
			{
				hitInvulnerabilityCountDown = 0;
			}

			//if we're out of lives by the end of this frame ---- kaput...
			if (pLives == 0)
			{
				pIsAlive = false;
			}

		}

		else if(!pIsAlive)
		{
			mode = DEATH_SCREEN;
		}
		break;

	case DEATH_SCREEN:
		gb.display.println("Game OVER!\n");
		gb.display.print("Top score: ");
		gb.display.println(pTopScore);
		gb.display.println("Your score: ");
		gb.display.setFontSize(2);
		gb.display.print("      ");
		gb.display.setColor(YELLOW);
		gb.display.println(pScore);
		if (pScore >= pTopScore)
		{
			pTopScore = pScore;
			gb.display.setFontSize(1);
			gb.display.setColor(RED);
			gb.display.println("\n ! NEW TOP SCORE !");
			gb.save.set(0, pTopScore);

		}

		gb.display.setFontSize(1);
		gb.display.setColor(ORANGE);
		gb.display.println("\nPress 'B' to Restart");

		if (gb.buttons.pressed(BUTTON_B))
		{
			resetToDefaults();
			mode = TITLE_SCREEN;
		}
		break;

	case HOW_TO_PLAY:
		gb.display.println("HOW TO PLAY\n");
		gb.display.setFontSize(1);
		gb.display.println("* D-Pad to move\n* 'A' to attack\n* Collect coins\n* Avoid arrows\n* ?? \n\n* PROFIT");
		if (gb.buttons.pressed(BUTTON_B))
		{
			mode = TITLE_SCREEN;
		}
		break;
	case CREDITS:
		gb.display.setColor(YELLOW);
		
		gb.display.println("Code and \"Art\": \n");
		gb.display.setColor(WHITE);
		gb.display.println("Rafal Boguszewski");
		gb.display.drawImage(0, 18, twt);
		gb.display.println("   @UnPolacoLoco\n\n");
		gb.display.setColor(YELLOW);
		gb.display.println("Inspiration:\n");
		gb.display.setColor(WHITE);
		gb.display.println("Gruniozerca by ");
		gb.display.drawImage(0, 54, twt);
		gb.display.println("   @archonik");

		if (gb.buttons.pressed(BUTTON_B))
		{
			mode = TITLE_SCREEN;
		}
		break;

	default:
		gb.display.print("ERROR, at default case in main switch");
		break;

	}
}
